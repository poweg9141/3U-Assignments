/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Assignment5;

import java.util.Scanner;

/**
 *
 * @author poweg9141
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form A5Q1_GUI
     */
    //initialize private variables to be used in program
    //keeps track of which player turn it is
    private boolean player = true;
    //keeps track of if the player has won
    private boolean win;
    //keeps track of both players points
    private int p1points = 0;
    private int p2points = 0;
    //keeps track of remaining guesses
    private int guess = 5;
    //keeps track of whos guessing
    private int guesser;
    //keeps track of whether the right letter was guessed
    private boolean guessed = false;
    //stores the original word and the hidden word with all the guessed letters
    private String word;
    private String hiddenWord;

    public GUI() {
        initComponents();

        //makes the yes and no buttons invisible at the start
        yes.setVisible(false);
        no.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        command = new javax.swing.JTextField();
        Q = new javax.swing.JButton();
        W = new javax.swing.JButton();
        E = new javax.swing.JButton();
        R = new javax.swing.JButton();
        T = new javax.swing.JButton();
        Y = new javax.swing.JButton();
        U = new javax.swing.JButton();
        I = new javax.swing.JButton();
        O = new javax.swing.JButton();
        P = new javax.swing.JButton();
        A = new javax.swing.JButton();
        S = new javax.swing.JButton();
        D = new javax.swing.JButton();
        F = new javax.swing.JButton();
        G = new javax.swing.JButton();
        H = new javax.swing.JButton();
        J = new javax.swing.JButton();
        K = new javax.swing.JButton();
        L = new javax.swing.JButton();
        Z = new javax.swing.JButton();
        X = new javax.swing.JButton();
        C = new javax.swing.JButton();
        V = new javax.swing.JButton();
        B = new javax.swing.JButton();
        N = new javax.swing.JButton();
        M = new javax.swing.JButton();
        wordDisplay = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        P1points = new javax.swing.JTextField();
        P2points = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Pturn = new javax.swing.JTextField();
        yes = new javax.swing.JButton();
        no = new javax.swing.JButton();
        play = new javax.swing.JButton();
        go = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        displayGuesses = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Hangman Version 1.4.6.784.7.5.8.78");

        command.setEditable(false);
        command.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandActionPerformed(evt);
            }
        });

        Q.setText("Q");
        Q.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QActionPerformed(evt);
            }
        });

        W.setText("W");
        W.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WActionPerformed(evt);
            }
        });

        E.setText("E");
        E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EActionPerformed(evt);
            }
        });

        R.setText("R");
        R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RActionPerformed(evt);
            }
        });

        T.setText("T");
        T.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TActionPerformed(evt);
            }
        });

        Y.setText("Y");
        Y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YActionPerformed(evt);
            }
        });

        U.setText("U");
        U.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UActionPerformed(evt);
            }
        });

        I.setText("I");
        I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IActionPerformed(evt);
            }
        });

        O.setText("O");
        O.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OActionPerformed(evt);
            }
        });

        P.setText("P");
        P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PActionPerformed(evt);
            }
        });

        A.setText("A");
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        S.setText("S");
        S.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SActionPerformed(evt);
            }
        });

        D.setText("D");
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        F.setText("F");
        F.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FActionPerformed(evt);
            }
        });

        G.setText("G");
        G.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GActionPerformed(evt);
            }
        });

        H.setText("H");
        H.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HActionPerformed(evt);
            }
        });

        J.setText("J");
        J.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JActionPerformed(evt);
            }
        });

        K.setText("K");
        K.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KActionPerformed(evt);
            }
        });

        L.setText("L");
        L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LActionPerformed(evt);
            }
        });

        Z.setText("Z");
        Z.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZActionPerformed(evt);
            }
        });

        X.setText("X");
        X.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XActionPerformed(evt);
            }
        });

        C.setText("C");
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        V.setText("V");
        V.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VActionPerformed(evt);
            }
        });

        B.setText("B");
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        N.setText("N");
        N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NActionPerformed(evt);
            }
        });

        M.setText("M");
        M.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MActionPerformed(evt);
            }
        });

        wordDisplay.setEditable(false);

        jLabel2.setText("Player 1 Points:");

        jLabel3.setText("Player 2 Points:");

        P1points.setEditable(false);
        P1points.setText("0");

        P2points.setEditable(false);
        P2points.setText("0");

        jLabel5.setText("Guesser:");

        Pturn.setEditable(false);
        Pturn.setText("Player 1");
        Pturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PturnActionPerformed(evt);
            }
        });

        yes.setText("YES");
        yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesActionPerformed(evt);
            }
        });

        no.setText("NO");
        no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noActionPerformed(evt);
            }
        });

        play.setText("PLAY");
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        go.setText("GO");
        go.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goActionPerformed(evt);
            }
        });

        jLabel4.setText("Guesses Left:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(P1points, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(command, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(wordDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Q)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(W)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(E)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(R)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(T)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Y)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(U)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(I))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(P2points, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yes, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(no, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(play, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(O)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(P))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Pturn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(displayGuesses))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(go)))
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(A)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(D)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(F)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(G)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(H)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(J)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(L))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(Z)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(X)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(C)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(V)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(N)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(M)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(command, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(Pturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P1points, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(displayGuesses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(P2points, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(yes, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(no, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(play, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wordDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(go))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Q)
                    .addComponent(W)
                    .addComponent(E)
                    .addComponent(R)
                    .addComponent(T)
                    .addComponent(Y)
                    .addComponent(U)
                    .addComponent(I)
                    .addComponent(O)
                    .addComponent(P))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(A)
                    .addComponent(S)
                    .addComponent(D)
                    .addComponent(F)
                    .addComponent(G)
                    .addComponent(H)
                    .addComponent(J)
                    .addComponent(K)
                    .addComponent(L))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Z)
                    .addComponent(X)
                    .addComponent(C)
                    .addComponent(V)
                    .addComponent(B)
                    .addComponent(N)
                    .addComponent(M))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PturnActionPerformed
    }//GEN-LAST:event_PturnActionPerformed

    private void commandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandActionPerformed
    }//GEN-LAST:event_commandActionPerformed

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        //runs when the play button is pressed
        
        //hides and disables yes, no, and play buttons to start new round
        play.setVisible(false);
        play.setEnabled(false);
        yes.setVisible(false);
        yes.setEnabled(false);
        no.setVisible(false);
        no.setEnabled(false);

        //updates player points display
        P1points.setText("" + p1points);
        P2points.setText("" + p2points);

        //asks the correct player to input a word
        if (player == true) {
            command.setText("P2 please enter the word in the text field below");
            //sets bottom text field editable so word can be entered
            wordDisplay.setEditable(true);
            wordDisplay.setText("");
            guesser = 1;
        } else {
            command.setText("P1 please enter the word in the text field below");
            //sets bottom text field editable so word can be entered
            wordDisplay.setEditable(true);
            wordDisplay.setText("");
            guesser = 2;
        }
        //updates player turn display
        Pturn.setText("Player " + guesser);
        //makes the go button beside the input box appear
        go.setVisible(true);
        go.setEnabled(true);
    }//GEN-LAST:event_playActionPerformed

    private void goActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goActionPerformed
        //runs when the go button is pressed
        
        //makes the go button dissapear and disables it
        go.setVisible(false);
        go.setEnabled(false);
        
        //updates remaining guesses to the display
        displayGuesses.setText("" + guess);
        //gets the word the player input
        word = wordDisplay.getText();
        //prompts the other player to guess the word
        command.setText("Player " + guesser + "please guess the word");
        //clears the wordDisplay box and disables editing
        wordDisplay.setText("");
        wordDisplay.setEditable(false);
        //resets hiddenWord before use (since it might be second round and word may have a value)
        hiddenWord = "";
        
        //for every letter in the word adds a dash to the hiddenWord
        for (int i = 0; i < word.length(); i++) {
            hiddenWord += "-";
        }
        //displays the hidden word (all dashes at the moment)
        wordDisplay.setText(hiddenWord);
        
        //sets comand box to the String returned from the method compileGuessesString
        //passes ints guess and guesser to compileGuessesString
        command.setText(compileGuessesString(guess, guesser));
    }//GEN-LAST:event_goActionPerformed

    //runs when the Q button is pressed
    private void QActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QActionPerformed
        //calls the letterGuessed method and passes the char 'q'
        letterGuessed('q');
        //disables the q button and makes it dissapear since it has already been guessed
        Q.setVisible(false);
        Q.setEnabled(false);
        
        /*
         * NOTE: THIS EXACT CODE IS REPEATED FOR BUTTONS W THROUGH M
         */
    }//GEN-LAST:event_QActionPerformed

    private void WActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WActionPerformed
        letterGuessed('w');
        W.setVisible(false);
        W.setEnabled(false);
    }//GEN-LAST:event_WActionPerformed

    private void EActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EActionPerformed
        letterGuessed('e');
        E.setVisible(false);
        E.setEnabled(false);
    }//GEN-LAST:event_EActionPerformed

    private void RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RActionPerformed
        letterGuessed('r');
        R.setVisible(false);
        R.setEnabled(false);
    }//GEN-LAST:event_RActionPerformed

    private void TActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TActionPerformed
        letterGuessed('t');
        T.setVisible(false);
        T.setEnabled(false);
    }//GEN-LAST:event_TActionPerformed

    private void YActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YActionPerformed
        letterGuessed('y');
        Y.setVisible(false);
        Y.setEnabled(false);
    }//GEN-LAST:event_YActionPerformed

    private void UActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UActionPerformed
        letterGuessed('u');
        U.setVisible(false);
        U.setEnabled(false);
    }//GEN-LAST:event_UActionPerformed

    private void IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IActionPerformed
        letterGuessed('i');
        I.setVisible(false);
        I.setEnabled(false);
    }//GEN-LAST:event_IActionPerformed

    private void OActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OActionPerformed
        letterGuessed('o');
        O.setVisible(false);
        O.setEnabled(false);
    }//GEN-LAST:event_OActionPerformed

    private void PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PActionPerformed
        letterGuessed('p');
        P.setVisible(false);
        P.setEnabled(false);
    }//GEN-LAST:event_PActionPerformed

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        letterGuessed('a');
        A.setVisible(false);
        A.setEnabled(false);
    }//GEN-LAST:event_AActionPerformed

    private void SActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SActionPerformed
        letterGuessed('s');
        S.setVisible(false);
        S.setEnabled(false);
    }//GEN-LAST:event_SActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        letterGuessed('d');
        D.setVisible(false);
        D.setEnabled(false);
    }//GEN-LAST:event_DActionPerformed

    private void FActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FActionPerformed
        letterGuessed('f');
        F.setVisible(false);
        F.setEnabled(false);
    }//GEN-LAST:event_FActionPerformed

    private void GActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GActionPerformed
        letterGuessed('g');
        G.setVisible(false);
        G.setEnabled(false);
    }//GEN-LAST:event_GActionPerformed

    private void HActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HActionPerformed
        letterGuessed('h');
        H.setVisible(false);
        H.setEnabled(false);
    }//GEN-LAST:event_HActionPerformed

    private void JActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JActionPerformed
        letterGuessed('j');
        J.setVisible(false);
        J.setEnabled(false);
    }//GEN-LAST:event_JActionPerformed

    private void KActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KActionPerformed
        letterGuessed('k');
        K.setVisible(false);
        K.setEnabled(false);
    }//GEN-LAST:event_KActionPerformed

    private void LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LActionPerformed
        letterGuessed('l');
        L.setVisible(false);
        L.setEnabled(false);
    }//GEN-LAST:event_LActionPerformed

    private void ZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZActionPerformed
        letterGuessed('z');
        Z.setVisible(false);
        Z.setEnabled(false);
    }//GEN-LAST:event_ZActionPerformed

    private void XActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XActionPerformed
        letterGuessed('x');
        X.setVisible(false);
        X.setEnabled(false);
    }//GEN-LAST:event_XActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        letterGuessed('c');
        C.setVisible(false);
        C.setEnabled(false);

    }//GEN-LAST:event_CActionPerformed

    private void VActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VActionPerformed
        letterGuessed('v');
        V.setVisible(false);
        V.setEnabled(false);
    }//GEN-LAST:event_VActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        letterGuessed('b');
        B.setVisible(false);
        B.setEnabled(false);
    }//GEN-LAST:event_BActionPerformed

    private void NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NActionPerformed
        letterGuessed('n');
        N.setVisible(false);
        N.setEnabled(false);
    }//GEN-LAST:event_NActionPerformed

    private void MActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MActionPerformed
        letterGuessed('m');
        M.setVisible(false);
        M.setEnabled(false);
    }//GEN-LAST:event_MActionPerformed

    private void yesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesActionPerformed
        //runs when yes button is pressed
        //Yes button is only avaliable to press when choosing to replay game
        
        //resets guesses
        guess = 5;
        //updates guesses display
        displayGuesses.setText("" + guess);
        
        //re-enables all letter buttons
        Q.setVisible(true);
        Q.setEnabled(true);
        W.setVisible(true);
        W.setEnabled(true);
        E.setVisible(true);
        E.setEnabled(true);
        R.setVisible(true);
        R.setEnabled(true);
        T.setVisible(true);
        T.setEnabled(true);
        Y.setVisible(true);
        Y.setEnabled(true);
        U.setVisible(true);
        U.setEnabled(true);
        I.setVisible(true);
        I.setEnabled(true);
        O.setVisible(true);
        O.setEnabled(true);
        P.setVisible(true);
        P.setEnabled(true);
        A.setVisible(true);
        A.setEnabled(true);
        S.setVisible(true);
        S.setEnabled(true);
        D.setVisible(true);
        D.setEnabled(true);
        F.setVisible(true);
        F.setEnabled(true);
        G.setVisible(true);
        G.setEnabled(true);
        H.setVisible(true);
        H.setEnabled(true);
        J.setVisible(true);
        J.setEnabled(true);
        K.setVisible(true);
        K.setEnabled(true);
        L.setVisible(true);
        L.setEnabled(true);
        Z.setVisible(true);
        Z.setEnabled(true);
        X.setVisible(true);
        X.setEnabled(true);
        C.setVisible(true);
        C.setEnabled(true);
        V.setVisible(true);
        V.setEnabled(true);
        B.setVisible(true);
        B.setEnabled(true);
        N.setVisible(true);
        N.setEnabled(true);
        M.setVisible(true);
        M.setEnabled(true);

        //calls the playActionPerfomed method with parameters evt
        playActionPerformed(evt);
    }//GEN-LAST:event_yesActionPerformed

    private void noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noActionPerformed
        //runs when no button is pressed
        //No button is only avaliable to press when choosing to replay game
        
        //exits the console and code
        System.exit(0);
    }//GEN-LAST:event_noActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });


    }

    private String compileGuessesString(int guesses, int player) {
        //takes the amount of guesses and the guesser as paramiters
        //compiles a message to tell the correct player how many guesses they have left
        String complete = "You have " + guesses + " left. Please guess a letter player " + player;
        //returns the compiled string
        return complete;
    }

    private void letterGuessed(char letter) {
        
        //initialized the right boolean used to determine if the player guessed a correct letter
        boolean right = false;
        
        //checks if and letter in the word equals the guessed letter
        for (int i = 0; i < word.length(); i++) {
            if (word.charAt(i) == letter) {
                //if it does sets right equal to true
                right = true;
                //tells the player they guessed right
                command.setText("Correct! Please guess again");
                //replaces the coresponding dash in hiddenWord with the correct letter
                hiddenWord = hiddenWord.substring(0, i) + letter + hiddenWord.substring(i + 1, hiddenWord.length());
                //updates the hiddenWord display
                wordDisplay.setText(hiddenWord);
            }
        }
        //if the letter is wring
        if (right == false) {
            //if player is not out of guesses
            if (guess != 0) {
                //subtract one from guess
                guess--;
                //updates guess display
                displayGuesses.setText("" + guess);
                //tells the player they have guessed wrong
                command.setText("Incorrect! Please guess again");
            }
            //if player is out of guesses
            if (guess == 0) {
                //tells player they have lost
                command.setText("YOU LOSE!");
                //displays the correct word
                wordDisplay.setText("The word was: " + word);
                //sets win to false
                win = false;
                //runs Loose method
                Loose();
            }
        }

        //if the player has guessed the entire word
        if (hiddenWord.equals(word)) {
            //tells the player they have won
            command.setText("YOU WIN!");
            //runs the Win method
            Win();
        }
    }

    private void Win() {
        //changes the guessing player and adds a point to the player that won
        if (player == true) {
            player = false;
            p1points += 1;
        } else {
            player = true;
            p2points += 1;
        }
        //runs the reset method with the boolean true
        //The true boolean if used to tell the reset method the player won
        Reset(true);
    }

    private void Loose() {

        //changes the guessing player and adds a point to the player that won
        //in this case the player whose word was not guessed
        if (player == true) {
            player = false;
            p2points += 1;
        } else {
            player = true;
            p1points += 1;
        }
        //run reset method with the boolean false
        Reset(false);
    }

    private void Reset(boolean win) {

        //resets guess, guessed and word variables
        guess = 5;
        guessed = false;
        word = "";
        hiddenWord = "";

        //enables and makes visible the yes and no buttons
        yes.setVisible(true);
        yes.setEnabled(true);
        no.setVisible(true);
        no.setEnabled(true);
        //asks the user if they would like to play again
        if (win == true) {
            command.setText("You Won! Would you like to play again?");
        } else {
            command.setText("You Lost! Would you like to play again?");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton B;
    private javax.swing.JButton C;
    private javax.swing.JButton D;
    private javax.swing.JButton E;
    private javax.swing.JButton F;
    private javax.swing.JButton G;
    private javax.swing.JButton H;
    private javax.swing.JButton I;
    private javax.swing.JButton J;
    private javax.swing.JButton K;
    private javax.swing.JButton L;
    private javax.swing.JButton M;
    private javax.swing.JButton N;
    private javax.swing.JButton O;
    private javax.swing.JButton P;
    private javax.swing.JTextField P1points;
    private javax.swing.JTextField P2points;
    private javax.swing.JTextField Pturn;
    private javax.swing.JButton Q;
    private javax.swing.JButton R;
    private javax.swing.JButton S;
    private javax.swing.JButton T;
    private javax.swing.JButton U;
    private javax.swing.JButton V;
    private javax.swing.JButton W;
    private javax.swing.JButton X;
    private javax.swing.JButton Y;
    private javax.swing.JButton Z;
    private javax.swing.JTextField command;
    private javax.swing.JTextField displayGuesses;
    private javax.swing.JButton go;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton no;
    private javax.swing.JButton play;
    private javax.swing.JTextField wordDisplay;
    private javax.swing.JButton yes;
    // End of variables declaration//GEN-END:variables
}
